services:
    zookeeper:
        image: confluentinc/cp-zookeeper:7.7.1
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        healthcheck:
            test: echo srvr | nc localhost 2181 || exit 1
            start_period: 10s
            retries: 10
            interval: 10s
        networks:
            - mynet

    broker:
        image: confluentinc/cp-kafka:7.7.1
        hostname: broker-1
        ports:
            - "29092:29092"
            - "9092:9092"
            - "9101:9101"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
            KAFKA_JMX_PORT: 9101
            KAFKA_JMX_HOSTNAME: localhost
            KAFKA_MESSAGE_MAX_BYTES: 5242880
            KAFKA_REPLICA_FETCH_MAX_BYTES: 5242880
        healthcheck:
            test: nc -z localhost 9092 || exit -1
            start_period: 15s
            retries: 10
            interval: 5s
            timeout: 5s
        networks:
            - mynet

    control-center:
        image: confluentinc/cp-enterprise-control-center:7.7.1
        hostname: control-center
        container_name: control-center
        depends_on:
            broker:
                condition: service_healthy
        ports:
            - "9021:9021"
        environment:
            CONTROL_CENTER_BOOTSTRAP_SERVERS: "broker:29092"
            CONTROL_CENTER_REPLICATION_FACTOR: 1
            CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
            CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
            CONFLUENT_METRICS_TOPIC_REPLICATION: 1
            CONFULENT_METRICS_ENABLE: "false"
            PORT: 9021
        networks:
            - mynet
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:9021/health"]
            interval: 30s
            timeout: 10s
            retries: 5

    debezium:
        image: debezium/connect:2.7.3.Final
        container_name: streaming-debezium
        restart: "always"
        depends_on:
            broker:
                condition: service_healthy
        ports:
            - "8083:8083"
        healthcheck:
            test: ["CMD", "curl", "--silent", "--fail", "-X", "GET", "http://localhost:8083/connectors"]
            start_period: 10s
            interval: 10s
            timeout: 5s
            retries: 5
        environment:
            BOOTSTRAP_SERVERS: "broker:29092"
            GROUP_ID: 1
            CONFIG_STORAGE_TOPIC: connect_configs
            OFFSET_STORAGE_TOPIC: connect_offsets
            STATUS_STORAGE_TOPIC: connect_status
            KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
            VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
            ENABLE_DEBEZIUM_SCRIPTING: "true"
            CONNECT_TOPIC_CREATION_ENABLE: "true"
        networks:
            - mynet

    # Debezium UI
    debezium-ui:
        image: debezium/debezium-ui:1.9
        container_name: debezium-ui
        hostname: debezium-ui
        depends_on:
            debezium:
                condition: service_healthy
        ports:
            - "8085:8080"
        environment:
            KAFKA_CONNECT_URIS: http://debezium:8083
        networks:
            - mynet

networks:
    mynet:
        name: mynet
        driver: bridge
